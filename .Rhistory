# Compare current month with this time last year
sales$Sales[length(time)] - sales$Sales[length(time) - 12]
data_ts = ts(sales$Sales, start=1, frequency=12)
decomp = stl(data_ts, "periodic")$time.series %>%
as_tibble() %>%
mutate(time = time) %>%
pivot_longer(cols = -time) %>%
mutate(name = fct_relevel(name, c("trend", "seasonal", "remainder")))
ggplot(decomp, aes(x = time, y = value, color = name)) +
geom_line() +
facet_wrap(vars(name), ncol=1, scales = "free_y")
# True decomposition
ggplot(data, aes(x = time, y = value, color = name)) +
geom_line() +
facet_wrap(vars(name), ncol=1, scales = "free_y")
read_excel("data/thailand/PCD_export.xlsx")
library(tidyverse)
library(readxl)
data = read_excel("data/thailand/PCD_export.xlsx")
data
glimpse(data)
headers = c("Year",
"Population",
sapply(1:12, function(x) {paste(x, c("Falciparum", "Vivax", "Other"))}))
data = read_excel("data/china/Yingjiang County Malaria Incidence 1986-2020.xlsx",
col_names=headers, skip=2)
data
glimpse(data)
data = read_excel("data/china/Yingjiang County Malaria Incidence 1986-2020.xlsx",
col_names=headers, skip=2) %>%
pivot_longer(-c(Year, Population), values_to = "Cases")
glimpse(data)
sheets = excel_sheets("data/china/Dengzhou City Malaria 1980-1989.xlsx")
data = lapply(sheets, function(s) {
headers = c("Year", "Month", "Township",
sapply(c("Falciparum", "Vivax", "Mixed"), function(x) {
paste(x, c("Local", "Imported"))
}))
read_excel("data/china/Dengzhou City Malaria 1980-1989.xlsx", s, col_names=headers, skip=3) %>%
fill(Year)
})# %>%
load_dengzhou
data
data = lapply(sheets, function(s) {
headers = c("Year", "Month", "Township",
sapply(c("Falciparum", "Vivax", "Mixed"), function(x) {
paste(x, c("Local", "Imported"))
}))
read_excel("data/china/Dengzhou City Malaria 1980-1989.xlsx", s, col_names=headers, skip=3) %>%
fill(Year)
}) %>%
bind_rows()# %>%
data
glimpse(data)
source("~/Documents/PhD/R/summary_epicurves.R", echo=TRUE)
load_dengzhou_towns = function(path = "data/china/Dengzhou City Malaria 1980-1989.xlsx",
dir = NULL) {
if (!is.null(dir)) {
path = file.path(dir, path)
}
sheets = excel_sheets(path)
data = lapply(sheets, function(s) {
headers = c("Year", "Month", "Township",
sapply(c("Falciparum", "Vivax", "Mixed"), function(x) {
paste(x, c("Local", "Imported"))
}))
read_excel(path, s, col_names=headers, skip=3) %>%
fill(Year)
}) %>%
bind_rows()
}
data = load_dengzhou_towns()
data
glimpse(data)
source("~/Documents/PhD/R/dengzhou_analysis.R", echo=TRUE)
# Town-level analysis ----
data_towns = load_dengzhou_towns()
data_towns
source("~/Documents/PhD/R/functions/load_dengzhou.R", echo=TRUE)
source("~/Documents/PhD/R/dengzhou_analysis.R", echo=TRUE)
# Town-level analysis ----
data_towns = load_dengzhou_towns()
data_towns
# Town-level analysis ----
data_towns = load_dengzhou_towns() %>%
filter(name %>% str_starts("Vivax|Mixed"))
data_towns
# Town-level analysis ----
data_towns = load_dengzhou_towns() %>%
count(Township, Date)
data_towns
?count
data
# Town-level analysis ----
data_towns = load_dengzhou_towns() %>%
count(Township, Date, name="Cases")
data_towns
p1
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township))
data_towns
# Town-level analysis ----
data_towns = load_dengzhou_towns() %>%
group_by(Township, Date) %>%
summarise(Cases = sum(Cases))
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township))
town_freq = data_towns %>%
group_by(Township) %>%
summarise(Cases = sum(Cases)) %>%
arrange(desc(Cases)) %>%
pull(Township)
town_infreq = data_towns %>%
group_by(Township) %>%
summarise(Cases = sum(Cases)) %>%
arrange(desc(Cases)) %>%
pull(Township)
town_infreq
data_towns = data_towns %>%
mutate(Township = Township %>% fct_relevel(town_infreq))
?fct_relevel
data_towns = data_towns %>%
mutate(Township = factor(Township, levels=town_infreq))
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township))
data_towns = data_towns %>%
mutate(Township = factor(Township, levels=town_infreq)) %>%
filter(Township %in% town_infreq[1:4])
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township))
install.packages('pinyin')
library(pinyin)
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township), ncol=1)
data_towns = data_towns %>%
mutate(Township = factor(Township, levels=town_infreq)) %>%
filter(Township %in% town_infreq[1:4]) %>%
mutate(Township = py(Township))
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township), ncol=1)
data_towns
# Town-level analysis ----
data_towns = load_dengzhou_towns() %>%
group_by(Township, Date) %>%
summarise(Cases = sum(Cases)) %>%
mutate(Township = py(Township))
town_infreq = data_towns %>%
group_by(Township) %>%
summarise(Cases = sum(Cases)) %>%
arrange(desc(Cases)) %>%
pull(Township)
data_towns = data_towns %>%
mutate(Township = factor(Township, levels=town_infreq)) %>%
filter(Township %in% town_infreq[1:4])
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township), ncol=1)
?factor
# Town-level analysis ----
data_towns = load_dengzhou_towns() %>%
group_by(Township, Date) %>%
summarise(Cases = sum(Cases))
town_infreq = data_towns %>%
group_by(Township) %>%
summarise(Cases = sum(Cases)) %>%
arrange(desc(Cases)) %>%
pull(Township)
data_towns = data_towns %>%
mutate(Township = factor(Township, levels=town_infreq, labels=py(town_infreq))) %>%
filter(Township %in% town_infreq[1:4])
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township), ncol=1)
?py
?data_towns
data_towns
data_towns = data_towns %>%
filter(Township %in% town_infreq[1:4]) %>%
mutate(Township = factor(Township, levels=town_infreq, labels=py(town_infreq)))
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township), ncol=1)
# Town-level analysis ----
data_towns = load_dengzhou_towns() %>%
group_by(Township, Date) %>%
summarise(Cases = sum(Cases))
town_infreq = data_towns %>%
group_by(Township) %>%
summarise(Cases = sum(Cases)) %>%
arrange(desc(Cases)) %>%
pull(Township)
data_towns = data_towns %>%
filter(Township %in% town_infreq[1:4]) %>%
mutate(Township = factor(Township, levels=town_infreq, labels=py(town_infreq)))
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township), ncol=1)
?py
data_towns = data_towns %>%
filter(Township %in% town_infreq[1:4]) %>%
mutate(Township = factor(Township, levels=town_infreq, labels=py(town_infreq, sep=" ")))
# Town-level analysis ----
data_towns = load_dengzhou_towns() %>%
group_by(Township, Date) %>%
summarise(Cases = sum(Cases))
town_infreq = data_towns %>%
group_by(Township) %>%
summarise(Cases = sum(Cases)) %>%
arrange(desc(Cases)) %>%
pull(Township)
data_towns = data_towns %>%
filter(Township %in% town_infreq[1:4]) %>%
mutate(Township = factor(Township, levels=town_infreq, labels=py(town_infreq, sep=" ")))
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township), ncol=1)
?py
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township), ncol=1)
data_towns = load_dengzhou_towns() %>%
group_by(Township, Date) %>%
summarise(Cases = sum(Cases))
town_infreq = data_towns %>%
group_by(Township) %>%
summarise(Cases = sum(Cases)) %>%
arrange(desc(Cases)) %>%
pull(Township)
data_towns = data_towns %>%
filter(Township %in% town_infreq[1:10]) %>%
mutate(Township = factor(Township, levels=town_infreq, labels=py(town_infreq, sep=" ")))
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township), ncol=1)
source("~/Documents/PhD/R/functions/load_dengzhou.R", echo=TRUE)
source("~/Documents/PhD/R/dengzhou_analysis.R", echo=TRUE)
source("~/Documents/PhD/R/functions/load_dengzhou.R", echo=TRUE)
source("~/Documents/PhD/R/dengzhou_analysis.R", echo=TRUE)
# Town-level analysis ----
data_towns = load_dengzhou_towns()
town_infreq = data_towns %>%
group_by(Township) %>%
summarise(Cases = sum(Cases)) %>%
arrange(desc(Cases)) %>%
pull(Township)
source("~/Documents/PhD/R/functions/load_dengzhou.R", echo=TRUE)
# Town-level analysis ----
data_towns = load_dengzhou_towns()
town_infreq = data_towns %>%
group_by(Township) %>%
summarise(Cases = sum(Cases)) %>%
arrange(desc(Cases)) %>%
pull(Township)
data_towns = data_towns %>%
filter(Township %in% town_infreq[1:10]) %>%
mutate(Township = factor(Township, levels=town_infreq, labels=py(town_infreq, sep=" ")))
ggplot(data_towns, aes(x=Date, y=Cases)) +
geom_col() +
facet_wrap(vars(Township), ncol=1)
data_town = data_towns %>%
filter(Township == town)
for (town in data_towns$Township) {
data_town = data_towns %>%
filter(Township == town)
decomp_town = decompose_data(data_town)
}
decomp_town
list_towns = lapply(levels(data_towns$Township), function(x) {
data_towns %>%
filter(Township == x)
})
list_towns
# Town-level analysis ----
data_towns = load_dengzhou_towns()
town_infreq = data_towns %>%
group_by(Township) %>%
summarise(Cases = sum(Cases)) %>%
arrange(desc(Cases)) %>%
pull(Township)
data_towns = data_towns %>%
filter(Township %in% town_infreq[1:10]) %>%
mutate(Township = factor(Township, levels=town_infreq, labels=py(town_infreq, sep=" ")) %>%
fct_drop())
list_towns = lapply(levels(data_towns$Township), function(x) {
data_towns %>%
filter(Township == x)
})
list_towns
list_towns = lapply(levels(data_towns$Township) %>% setNames({.}), function(x) {
data_towns %>%
filter(Township == x)
})
# Analyse time series decomposition
p1 = ggplot(decomp %>%
filter(name %in% c("Cases", "trend", "remainder")),
aes(x = Date, y = value)) +
geom_col() +
geom_line(data = decomp %>%
filter(name == "trend.seasonal") %>%
mutate(name = "Cases"),
color = "orange",
linewidth = 1) +
facet_grid(vars(name), scales = "free_y") +
scale_x_date(date_breaks = "year", date_labels = "%b\n%Y") +
labs(x = NULL, y = "Counts/error (n, Î´/n, n)")
p1
decomp
decomp
decomp
list_towns = lapply(levels(data_towns$Township) %>% setNames({.}), function(x) {
data = data_towns %>%
filter(Township == x)
decompose_data(data)
}) %>%
bind_rows(.id = "Township")
list_towns
p1 = ggplot(decomp %>%
filter(name =="trend"),
aes(x=Date, y=value, color=Township)) +
geom_line()
p1
decomp
decomp_towns = lapply(levels(data_towns$Township) %>% setNames({.}), function(x) {
data = data_towns %>%
filter(Township == x)
decompose_data(data)
}) %>%
bind_rows(.id = "Township")
ggplot(decomp %>%
filter(name =="trend"),
aes(x=Date, y=value, color=Township)) +
geom_line()
decomp_towns
p1 = ggplot(decomp_towns %>%
filter(name %in% c("Cases", "trend", "remainder")),
aes(x = Date, y = value)) +
geom_col() +
geom_line(data = decomp %>%
filter(name == "trend.seasonal") %>%
mutate(name = "Cases"),
color = "orange",
linewidth = 1) +
facet_grid(vars(name), scales = "free_y") +
scale_x_date(date_breaks = "year", date_labels = "%b\n%Y") +
labs(x = NULL, y = "Counts/error (n, Î´/n, n)")
ggplot(decomp_towns %>%
filter(name =="trend"),
aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name =="seasonal"),
aes(x=Date, y=value, color=Township)) +
geom_line()
decomp_towns
ggplot(decomp_towns %>%
filter(name =="seasonal",
Date <= min(Date) + months(12)),
aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name =="trend"),
aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name =="seasonal",
Date <= min(Date) + months(12)),
aes(x=Date, y=value, color=Township)) +
geom_line()
decomp_towns %>%
filter(name =="trend") %>%
group_by(Township) %>%
ggplot(aes(x=Date, y=value, color=Township)) +
geom_line()
decomp_towns %>%
filter(name =="trend") %>%
group_by(Township)# %>%
decomp_towns %>%
filter(name =="trend") %>%
group_by(Township) %>%
mutate(value = value / mean(value)) %>%
ggplot(aes(x=Date, y=value, color=Township)) +
geom_line()
decomp_towns %>%
filter(name =="trend") %>%
group_by(Township) %>%
mutate(value = value / first(value)) %>%
ggplot(aes(x=Date, y=value, color=Township)) +
geom_line()
decomp_towns %>%
filter(name =="trend") %>%
group_by(Township) %>%
mutate(value = value / max(value)) %>%
ggplot(aes(x=Date, y=value, color=Township)) +
geom_line()
decomp_towns %>%
filter(name =="seasonal") %>%
group_by(Township) %>%
mutate(value = value / max(value)) %>%
ggplot(aes(x=Date, y=value, color=Township)) +
geom_line()
decomp_towns %>%
filter(name =="trend") %>%
group_by(Township) %>%
mutate(value = value / max(value)) %>%
ggplot(aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name =="seasonal",
Date <= min(Date) + months(12)),
aes(x=Date, y=value, color=Township)) +
geom_line()
decomp_towns
ggplot(decomp_towns %>%
filter(name =="trend.seasonal",
Date <= min(Date) + months(12)),
aes(x=Date, y=value, color=Township)) +
geom_line()
filter(name =="trend.seasonal",
ggplot(decomp_towns %>%
filter(name =="trend.seasonal"),
aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name =="trend.seasonal"),
aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name =="remainder"),
aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name =="trend.seasonal"),
aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name =="trend.seasonal"),
aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name =="remainder"),
aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name =="trend.seasonal"),
aes(x=Date, y=value, color=Township)) +
geom_line() +
facet_wrap(vars(name))
ggplot(decomp_towns %>%
filter(name =="trend.seasonal"),
aes(x=Date, y=value, color=Township)) +
geom_line() +
facet_wrap(vars(Township))
ggplot(decomp_towns %>%
filter(name =="trend.seasonal"),
aes(x=Date, y=value, color=Township)) +
geom_line() +
facet_wrap(vars(Township), ncol=1)
ggplot(decomp_towns %>%
filter(name %in% c("Cases", "trend.seasonal")),
aes(x=Date, y=value, color=name)) +
geom_line() +
facet_wrap(vars(Township), ncol=1)
source("~/Documents/PhD/R/dengzhou_analysis.R", echo=TRUE)
ggplot(decomp_towns %>%
filter(name %in% c("Cases", "trend")),
aes(x=Date, y=value, color=name)) +
geom_line() +
facet_wrap(vars(Township), ncol=1)
ggplot(decomp_towns %>%
filter(name %in% c("Cases", "trend.seasonal")),
aes(x=Date, y=value, color=name)) +
geom_line() +
facet_wrap(vars(Township), ncol=1)
?stl
?stl
source("~/Documents/PhD/R/functions/decompose_data.R", echo=TRUE)
decomp_towns = lapply(levels(data_towns$Township) %>% setNames({.}), function(x) {
data = data_towns %>%
filter(Township == x)
decompose_data(data, s.degree=1)
}) %>%
bind_rows(.id = "Township")
decomp_towns %>%
filter(name =="trend") %>%
group_by(Township) %>%
mutate(value = value / max(value)) %>%
ggplot(aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name =="seasonal",
Date <= min(Date) + months(12)),
aes(x=Date, y=value, color=Township)) +
geom_line()
ggplot(decomp_towns %>%
filter(name %in% c("Cases", "trend.seasonal")),
aes(x=Date, y=value, color=name)) +
geom_line() +
facet_wrap(vars(Township), ncol=1)
?stl
ggplot(decomp_towns %>%
filter(name %in% c("Cases", "trend")),
aes(x=Date, y=value, color=name)) +
geom_line() +
facet_wrap(vars(Township), ncol=1)
?stl
p1 / p2 + plot_layout(heights = c(2, 1))
